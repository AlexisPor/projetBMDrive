package com.projetBMDrive.entities;
// Generated 28 juin 2021 ï¿½ 11:55:43 by Hibernate Tools 5.0.6.Final

import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * BmdCategorie generated by hbm2java
 */
@Entity
@Table(name = "BMD_CATEGORIE", schema = "BMDRIVE")
public class BmdCategorie implements java.io.Serializable {

	private BigDecimal catId;
    private BmdArticle bmdArticle;
    private String catLibelle;

    public BmdCategorie() {
    }

    public BmdCategorie(BigDecimal catId, String catLibelle) {
        this.catId = catId;
        this.catLibelle = catLibelle;
    }

    public BmdCategorie(BigDecimal catId, BmdArticle bmdArticle, String catLibelle) {
        this.catId = catId;
        this.bmdArticle = bmdArticle;
        this.catLibelle = catLibelle;
    }

    @Id
    @SequenceGenerator(name="BMD_CATEGORIE_SEQ", sequenceName = "BMD_CATEGORIE_SEQ", allocationSize = 1)
    @GeneratedValue(strategy=GenerationType.SEQUENCE, generator="BMD_CATEGORIE_SEQ")
    @Column(name = "CAT_ID", unique = true, nullable = false, precision = 22, scale = 0)
    public BigDecimal getCatId() {
        return this.catId;
    }

    public void setCatId(BigDecimal catId) {
        this.catId = catId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CAT_ARTICLE_ID")
    public BmdArticle getBmdArticle() {
        return this.bmdArticle;
    }

    public void setBmdArticle(BmdArticle bmdArticle) {
        this.bmdArticle = bmdArticle;
    }

    @Column(name = "CAT_LIBELLE", nullable = false, length = 20)
    public String getCatLibelle() {
        return this.catLibelle;
    }

    public void setCatLibelle(String catLibelle) {
        this.catLibelle = catLibelle;
    }

}
